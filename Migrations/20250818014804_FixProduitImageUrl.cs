using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace ArtMarketPlaceAPI.Migrations
{
    /// <inheritdoc />
    public partial class FixProduitImageUrl : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AlterColumn<decimal>(
                name: "Prix",
                table: "Produits",
                type: "decimal(18,2)",
                nullable: false,
                oldClrType: typeof(float),
                oldType: "real");

           

            migrationBuilder.CreateTable(
                name: "CartItems",
                columns: table => new
                {
                    Id = table.Column<int>(type: "int", nullable: false)
                        .Annotation("SqlServer:Identity", "1, 1"),
                    ProduitId = table.Column<int>(type: "int", nullable: false),
                    ClientId = table.Column<int>(type: "int", nullable: false),
                    Quantite = table.Column<int>(type: "int", nullable: false),
                    DateAjout = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_CartItems", x => x.Id);
                    table.ForeignKey(
                        name: "FK_CartItems_Produits_ProduitId",
                        column: x => x.ProduitId,
                        principalTable: "Produits",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_CartItems_Users_ClientId",
                        column: x => x.ClientId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 215, 119, 215, 252, 191, 165, 19, 8, 213, 219, 137, 0, 41, 114, 171, 111, 25, 253, 205, 161, 10, 48, 244, 128, 73, 140, 158, 98, 153, 98, 8, 114, 119, 172, 117, 109, 99, 33, 65, 83, 51, 153, 37, 243, 246, 180, 90, 27, 232, 77, 99, 97, 106, 181, 61, 95, 220, 12, 108, 239, 126, 116, 190, 27 }, new byte[] { 12, 195, 198, 107, 98, 208, 101, 0, 117, 28, 86, 149, 210, 12, 198, 204, 163, 245, 56, 123, 19, 230, 213, 169, 218, 62, 130, 213, 123, 35, 110, 95, 199, 25, 116, 17, 139, 127, 149, 79, 41, 141, 58, 71, 198, 103, 134, 124, 222, 250, 190, 82, 139, 109, 148, 176, 58, 238, 147, 62, 233, 141, 111, 180, 200, 14, 71, 63, 9, 27, 128, 197, 141, 251, 150, 71, 88, 11, 15, 180, 191, 255, 234, 69, 222, 27, 104, 138, 205, 242, 57, 54, 144, 3, 236, 4, 192, 114, 150, 218, 170, 219, 106, 222, 233, 146, 71, 21, 33, 61, 40, 149, 198, 209, 78, 1, 61, 194, 125, 231, 79, 98, 11, 134, 252, 104, 255, 86 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 215, 119, 215, 252, 191, 165, 19, 8, 213, 219, 137, 0, 41, 114, 171, 111, 25, 253, 205, 161, 10, 48, 244, 128, 73, 140, 158, 98, 153, 98, 8, 114, 119, 172, 117, 109, 99, 33, 65, 83, 51, 153, 37, 243, 246, 180, 90, 27, 232, 77, 99, 97, 106, 181, 61, 95, 220, 12, 108, 239, 126, 116, 190, 27 }, new byte[] { 12, 195, 198, 107, 98, 208, 101, 0, 117, 28, 86, 149, 210, 12, 198, 204, 163, 245, 56, 123, 19, 230, 213, 169, 218, 62, 130, 213, 123, 35, 110, 95, 199, 25, 116, 17, 139, 127, 149, 79, 41, 141, 58, 71, 198, 103, 134, 124, 222, 250, 190, 82, 139, 109, 148, 176, 58, 238, 147, 62, 233, 141, 111, 180, 200, 14, 71, 63, 9, 27, 128, 197, 141, 251, 150, 71, 88, 11, 15, 180, 191, 255, 234, 69, 222, 27, 104, 138, 205, 242, 57, 54, 144, 3, 236, 4, 192, 114, 150, 218, 170, 219, 106, 222, 233, 146, 71, 21, 33, 61, 40, 149, 198, 209, 78, 1, 61, 194, 125, 231, 79, 98, 11, 134, 252, 104, 255, 86 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 215, 119, 215, 252, 191, 165, 19, 8, 213, 219, 137, 0, 41, 114, 171, 111, 25, 253, 205, 161, 10, 48, 244, 128, 73, 140, 158, 98, 153, 98, 8, 114, 119, 172, 117, 109, 99, 33, 65, 83, 51, 153, 37, 243, 246, 180, 90, 27, 232, 77, 99, 97, 106, 181, 61, 95, 220, 12, 108, 239, 126, 116, 190, 27 }, new byte[] { 12, 195, 198, 107, 98, 208, 101, 0, 117, 28, 86, 149, 210, 12, 198, 204, 163, 245, 56, 123, 19, 230, 213, 169, 218, 62, 130, 213, 123, 35, 110, 95, 199, 25, 116, 17, 139, 127, 149, 79, 41, 141, 58, 71, 198, 103, 134, 124, 222, 250, 190, 82, 139, 109, 148, 176, 58, 238, 147, 62, 233, 141, 111, 180, 200, 14, 71, 63, 9, 27, 128, 197, 141, 251, 150, 71, 88, 11, 15, 180, 191, 255, 234, 69, 222, 27, 104, 138, 205, 242, 57, 54, 144, 3, 236, 4, 192, 114, 150, 218, 170, 219, 106, 222, 233, 146, 71, 21, 33, 61, 40, 149, 198, 209, 78, 1, 61, 194, 125, 231, 79, 98, 11, 134, 252, 104, 255, 86 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 215, 119, 215, 252, 191, 165, 19, 8, 213, 219, 137, 0, 41, 114, 171, 111, 25, 253, 205, 161, 10, 48, 244, 128, 73, 140, 158, 98, 153, 98, 8, 114, 119, 172, 117, 109, 99, 33, 65, 83, 51, 153, 37, 243, 246, 180, 90, 27, 232, 77, 99, 97, 106, 181, 61, 95, 220, 12, 108, 239, 126, 116, 190, 27 }, new byte[] { 12, 195, 198, 107, 98, 208, 101, 0, 117, 28, 86, 149, 210, 12, 198, 204, 163, 245, 56, 123, 19, 230, 213, 169, 218, 62, 130, 213, 123, 35, 110, 95, 199, 25, 116, 17, 139, 127, 149, 79, 41, 141, 58, 71, 198, 103, 134, 124, 222, 250, 190, 82, 139, 109, 148, 176, 58, 238, 147, 62, 233, 141, 111, 180, 200, 14, 71, 63, 9, 27, 128, 197, 141, 251, 150, 71, 88, 11, 15, 180, 191, 255, 234, 69, 222, 27, 104, 138, 205, 242, 57, 54, 144, 3, 236, 4, 192, 114, 150, 218, 170, 219, 106, 222, 233, 146, 71, 21, 33, 61, 40, 149, 198, 209, 78, 1, 61, 194, 125, 231, 79, 98, 11, 134, 252, 104, 255, 86 } });

            migrationBuilder.CreateIndex(
                name: "IX_CartItems_ClientId",
                table: "CartItems",
                column: "ClientId");

            migrationBuilder.CreateIndex(
                name: "IX_CartItems_ProduitId",
                table: "CartItems",
                column: "ProduitId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "CartItems");

            migrationBuilder.DropColumn(
                name: "ImageUrl",
                table: "Produits");

            migrationBuilder.AlterColumn<float>(
                name: "Prix",
                table: "Produits",
                type: "real",
                nullable: false,
                oldClrType: typeof(decimal),
                oldType: "decimal(18,2)");

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 101, 223, 71, 225, 193, 193, 112, 40, 253, 251, 22, 96, 162, 25, 192, 194, 219, 23, 7, 99, 173, 244, 182, 185, 85, 110, 8, 237, 239, 91, 75, 178, 171, 108, 12, 194, 72, 63, 236, 19, 217, 255, 139, 188, 126, 250, 127, 244, 47, 85, 105, 5, 237, 251, 22, 148, 193, 8, 114, 84, 48, 158, 195, 158 }, new byte[] { 140, 57, 209, 138, 124, 242, 226, 192, 149, 193, 129, 145, 25, 242, 165, 15, 102, 159, 133, 254, 210, 45, 55, 251, 43, 157, 140, 47, 228, 117, 96, 132, 165, 203, 134, 132, 68, 255, 48, 81, 213, 129, 96, 94, 254, 198, 174, 45, 219, 224, 15, 57, 5, 185, 31, 194, 217, 19, 239, 161, 80, 16, 138, 223, 135, 106, 223, 88, 88, 171, 177, 198, 136, 158, 23, 127, 62, 83, 63, 230, 93, 133, 236, 51, 120, 174, 55, 97, 195, 108, 179, 51, 36, 154, 98, 171, 170, 71, 109, 249, 52, 176, 162, 93, 98, 54, 47, 225, 58, 100, 189, 8, 57, 93, 13, 213, 92, 58, 242, 70, 206, 109, 62, 66, 178, 37, 91, 0 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 101, 223, 71, 225, 193, 193, 112, 40, 253, 251, 22, 96, 162, 25, 192, 194, 219, 23, 7, 99, 173, 244, 182, 185, 85, 110, 8, 237, 239, 91, 75, 178, 171, 108, 12, 194, 72, 63, 236, 19, 217, 255, 139, 188, 126, 250, 127, 244, 47, 85, 105, 5, 237, 251, 22, 148, 193, 8, 114, 84, 48, 158, 195, 158 }, new byte[] { 140, 57, 209, 138, 124, 242, 226, 192, 149, 193, 129, 145, 25, 242, 165, 15, 102, 159, 133, 254, 210, 45, 55, 251, 43, 157, 140, 47, 228, 117, 96, 132, 165, 203, 134, 132, 68, 255, 48, 81, 213, 129, 96, 94, 254, 198, 174, 45, 219, 224, 15, 57, 5, 185, 31, 194, 217, 19, 239, 161, 80, 16, 138, 223, 135, 106, 223, 88, 88, 171, 177, 198, 136, 158, 23, 127, 62, 83, 63, 230, 93, 133, 236, 51, 120, 174, 55, 97, 195, 108, 179, 51, 36, 154, 98, 171, 170, 71, 109, 249, 52, 176, 162, 93, 98, 54, 47, 225, 58, 100, 189, 8, 57, 93, 13, 213, 92, 58, 242, 70, 206, 109, 62, 66, 178, 37, 91, 0 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 101, 223, 71, 225, 193, 193, 112, 40, 253, 251, 22, 96, 162, 25, 192, 194, 219, 23, 7, 99, 173, 244, 182, 185, 85, 110, 8, 237, 239, 91, 75, 178, 171, 108, 12, 194, 72, 63, 236, 19, 217, 255, 139, 188, 126, 250, 127, 244, 47, 85, 105, 5, 237, 251, 22, 148, 193, 8, 114, 84, 48, 158, 195, 158 }, new byte[] { 140, 57, 209, 138, 124, 242, 226, 192, 149, 193, 129, 145, 25, 242, 165, 15, 102, 159, 133, 254, 210, 45, 55, 251, 43, 157, 140, 47, 228, 117, 96, 132, 165, 203, 134, 132, 68, 255, 48, 81, 213, 129, 96, 94, 254, 198, 174, 45, 219, 224, 15, 57, 5, 185, 31, 194, 217, 19, 239, 161, 80, 16, 138, 223, 135, 106, 223, 88, 88, 171, 177, 198, 136, 158, 23, 127, 62, 83, 63, 230, 93, 133, 236, 51, 120, 174, 55, 97, 195, 108, 179, 51, 36, 154, 98, 171, 170, 71, 109, 249, 52, 176, 162, 93, 98, 54, 47, 225, 58, 100, 189, 8, 57, 93, 13, 213, 92, 58, 242, 70, 206, 109, 62, 66, 178, 37, 91, 0 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 101, 223, 71, 225, 193, 193, 112, 40, 253, 251, 22, 96, 162, 25, 192, 194, 219, 23, 7, 99, 173, 244, 182, 185, 85, 110, 8, 237, 239, 91, 75, 178, 171, 108, 12, 194, 72, 63, 236, 19, 217, 255, 139, 188, 126, 250, 127, 244, 47, 85, 105, 5, 237, 251, 22, 148, 193, 8, 114, 84, 48, 158, 195, 158 }, new byte[] { 140, 57, 209, 138, 124, 242, 226, 192, 149, 193, 129, 145, 25, 242, 165, 15, 102, 159, 133, 254, 210, 45, 55, 251, 43, 157, 140, 47, 228, 117, 96, 132, 165, 203, 134, 132, 68, 255, 48, 81, 213, 129, 96, 94, 254, 198, 174, 45, 219, 224, 15, 57, 5, 185, 31, 194, 217, 19, 239, 161, 80, 16, 138, 223, 135, 106, 223, 88, 88, 171, 177, 198, 136, 158, 23, 127, 62, 83, 63, 230, 93, 133, 236, 51, 120, 174, 55, 97, 195, 108, 179, 51, 36, 154, 98, 171, 170, 71, 109, 249, 52, 176, 162, 93, 98, 54, 47, 225, 58, 100, 189, 8, 57, 93, 13, 213, 92, 58, 242, 70, 206, 109, 62, 66, 178, 37, 91, 0 } });
        }
    }
}
