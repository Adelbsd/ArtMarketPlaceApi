using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace ArtMarketPlaceAPI.Migrations
{
    /// <inheritdoc />
    public partial class SyncSchema : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 103, 57, 215, 109, 198, 81, 160, 150, 125, 46, 73, 18, 115, 168, 106, 173, 174, 79, 105, 179, 177, 7, 221, 81, 121, 241, 43, 185, 30, 218, 251, 170, 198, 89, 21, 18, 239, 34, 157, 42, 32, 32, 159, 146, 62, 201, 166, 99, 138, 102, 86, 90, 0, 156, 78, 173, 131, 159, 214, 175, 85, 43, 255, 20 }, new byte[] { 150, 56, 189, 117, 50, 35, 248, 10, 193, 191, 252, 110, 148, 192, 206, 243, 29, 57, 36, 45, 247, 108, 112, 70, 152, 67, 17, 204, 251, 116, 214, 62, 209, 77, 169, 217, 157, 168, 163, 190, 65, 199, 33, 185, 90, 9, 100, 123, 151, 198, 63, 85, 7, 236, 211, 184, 93, 17, 246, 102, 100, 91, 96, 96, 70, 168, 168, 192, 91, 213, 34, 137, 225, 196, 47, 40, 182, 41, 33, 70, 210, 247, 76, 196, 152, 71, 144, 31, 105, 8, 237, 248, 185, 59, 205, 7, 38, 122, 153, 29, 32, 237, 8, 248, 143, 238, 224, 35, 193, 41, 147, 51, 168, 239, 225, 130, 23, 82, 152, 140, 152, 96, 226, 252, 163, 164, 185, 156 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 103, 57, 215, 109, 198, 81, 160, 150, 125, 46, 73, 18, 115, 168, 106, 173, 174, 79, 105, 179, 177, 7, 221, 81, 121, 241, 43, 185, 30, 218, 251, 170, 198, 89, 21, 18, 239, 34, 157, 42, 32, 32, 159, 146, 62, 201, 166, 99, 138, 102, 86, 90, 0, 156, 78, 173, 131, 159, 214, 175, 85, 43, 255, 20 }, new byte[] { 150, 56, 189, 117, 50, 35, 248, 10, 193, 191, 252, 110, 148, 192, 206, 243, 29, 57, 36, 45, 247, 108, 112, 70, 152, 67, 17, 204, 251, 116, 214, 62, 209, 77, 169, 217, 157, 168, 163, 190, 65, 199, 33, 185, 90, 9, 100, 123, 151, 198, 63, 85, 7, 236, 211, 184, 93, 17, 246, 102, 100, 91, 96, 96, 70, 168, 168, 192, 91, 213, 34, 137, 225, 196, 47, 40, 182, 41, 33, 70, 210, 247, 76, 196, 152, 71, 144, 31, 105, 8, 237, 248, 185, 59, 205, 7, 38, 122, 153, 29, 32, 237, 8, 248, 143, 238, 224, 35, 193, 41, 147, 51, 168, 239, 225, 130, 23, 82, 152, 140, 152, 96, 226, 252, 163, 164, 185, 156 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 103, 57, 215, 109, 198, 81, 160, 150, 125, 46, 73, 18, 115, 168, 106, 173, 174, 79, 105, 179, 177, 7, 221, 81, 121, 241, 43, 185, 30, 218, 251, 170, 198, 89, 21, 18, 239, 34, 157, 42, 32, 32, 159, 146, 62, 201, 166, 99, 138, 102, 86, 90, 0, 156, 78, 173, 131, 159, 214, 175, 85, 43, 255, 20 }, new byte[] { 150, 56, 189, 117, 50, 35, 248, 10, 193, 191, 252, 110, 148, 192, 206, 243, 29, 57, 36, 45, 247, 108, 112, 70, 152, 67, 17, 204, 251, 116, 214, 62, 209, 77, 169, 217, 157, 168, 163, 190, 65, 199, 33, 185, 90, 9, 100, 123, 151, 198, 63, 85, 7, 236, 211, 184, 93, 17, 246, 102, 100, 91, 96, 96, 70, 168, 168, 192, 91, 213, 34, 137, 225, 196, 47, 40, 182, 41, 33, 70, 210, 247, 76, 196, 152, 71, 144, 31, 105, 8, 237, 248, 185, 59, 205, 7, 38, 122, 153, 29, 32, 237, 8, 248, 143, 238, 224, 35, 193, 41, 147, 51, 168, 239, 225, 130, 23, 82, 152, 140, 152, 96, 226, 252, 163, 164, 185, 156 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 103, 57, 215, 109, 198, 81, 160, 150, 125, 46, 73, 18, 115, 168, 106, 173, 174, 79, 105, 179, 177, 7, 221, 81, 121, 241, 43, 185, 30, 218, 251, 170, 198, 89, 21, 18, 239, 34, 157, 42, 32, 32, 159, 146, 62, 201, 166, 99, 138, 102, 86, 90, 0, 156, 78, 173, 131, 159, 214, 175, 85, 43, 255, 20 }, new byte[] { 150, 56, 189, 117, 50, 35, 248, 10, 193, 191, 252, 110, 148, 192, 206, 243, 29, 57, 36, 45, 247, 108, 112, 70, 152, 67, 17, 204, 251, 116, 214, 62, 209, 77, 169, 217, 157, 168, 163, 190, 65, 199, 33, 185, 90, 9, 100, 123, 151, 198, 63, 85, 7, 236, 211, 184, 93, 17, 246, 102, 100, 91, 96, 96, 70, 168, 168, 192, 91, 213, 34, 137, 225, 196, 47, 40, 182, 41, 33, 70, 210, 247, 76, 196, 152, 71, 144, 31, 105, 8, 237, 248, 185, 59, 205, 7, 38, 122, 153, 29, 32, 237, 8, 248, 143, 238, 224, 35, 193, 41, 147, 51, 168, 239, 225, 130, 23, 82, 152, 140, 152, 96, 226, 252, 163, 164, 185, 156 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 216, 160, 220, 146, 131, 235, 137, 176, 108, 147, 52, 58, 233, 11, 26, 178, 59, 65, 22, 37, 19, 243, 63, 119, 33, 200, 44, 251, 1, 205, 51, 201, 76, 21, 54, 182, 253, 209, 248, 107, 49, 198, 149, 9, 229, 254, 61, 143, 177, 205, 223, 20, 27, 193, 0, 142, 221, 250, 196, 93, 98, 11, 169, 89 }, new byte[] { 119, 48, 19, 64, 180, 45, 171, 69, 54, 96, 113, 107, 129, 154, 195, 54, 234, 201, 199, 243, 174, 48, 81, 240, 116, 235, 200, 202, 69, 188, 162, 106, 110, 151, 205, 170, 152, 70, 99, 12, 127, 59, 24, 210, 195, 85, 120, 133, 14, 180, 2, 103, 153, 51, 85, 36, 93, 29, 33, 186, 153, 134, 137, 227, 106, 194, 146, 84, 145, 150, 174, 8, 126, 121, 163, 228, 226, 70, 75, 125, 45, 35, 119, 250, 66, 26, 108, 159, 148, 185, 85, 4, 165, 204, 62, 164, 241, 37, 171, 183, 207, 244, 197, 214, 88, 223, 49, 211, 149, 249, 253, 205, 49, 51, 1, 125, 99, 33, 145, 20, 19, 122, 114, 1, 145, 152, 26, 223 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 2,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 216, 160, 220, 146, 131, 235, 137, 176, 108, 147, 52, 58, 233, 11, 26, 178, 59, 65, 22, 37, 19, 243, 63, 119, 33, 200, 44, 251, 1, 205, 51, 201, 76, 21, 54, 182, 253, 209, 248, 107, 49, 198, 149, 9, 229, 254, 61, 143, 177, 205, 223, 20, 27, 193, 0, 142, 221, 250, 196, 93, 98, 11, 169, 89 }, new byte[] { 119, 48, 19, 64, 180, 45, 171, 69, 54, 96, 113, 107, 129, 154, 195, 54, 234, 201, 199, 243, 174, 48, 81, 240, 116, 235, 200, 202, 69, 188, 162, 106, 110, 151, 205, 170, 152, 70, 99, 12, 127, 59, 24, 210, 195, 85, 120, 133, 14, 180, 2, 103, 153, 51, 85, 36, 93, 29, 33, 186, 153, 134, 137, 227, 106, 194, 146, 84, 145, 150, 174, 8, 126, 121, 163, 228, 226, 70, 75, 125, 45, 35, 119, 250, 66, 26, 108, 159, 148, 185, 85, 4, 165, 204, 62, 164, 241, 37, 171, 183, 207, 244, 197, 214, 88, 223, 49, 211, 149, 249, 253, 205, 49, 51, 1, 125, 99, 33, 145, 20, 19, 122, 114, 1, 145, 152, 26, 223 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 3,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 216, 160, 220, 146, 131, 235, 137, 176, 108, 147, 52, 58, 233, 11, 26, 178, 59, 65, 22, 37, 19, 243, 63, 119, 33, 200, 44, 251, 1, 205, 51, 201, 76, 21, 54, 182, 253, 209, 248, 107, 49, 198, 149, 9, 229, 254, 61, 143, 177, 205, 223, 20, 27, 193, 0, 142, 221, 250, 196, 93, 98, 11, 169, 89 }, new byte[] { 119, 48, 19, 64, 180, 45, 171, 69, 54, 96, 113, 107, 129, 154, 195, 54, 234, 201, 199, 243, 174, 48, 81, 240, 116, 235, 200, 202, 69, 188, 162, 106, 110, 151, 205, 170, 152, 70, 99, 12, 127, 59, 24, 210, 195, 85, 120, 133, 14, 180, 2, 103, 153, 51, 85, 36, 93, 29, 33, 186, 153, 134, 137, 227, 106, 194, 146, 84, 145, 150, 174, 8, 126, 121, 163, 228, 226, 70, 75, 125, 45, 35, 119, 250, 66, 26, 108, 159, 148, 185, 85, 4, 165, 204, 62, 164, 241, 37, 171, 183, 207, 244, 197, 214, 88, 223, 49, 211, 149, 249, 253, 205, 49, 51, 1, 125, 99, 33, 145, 20, 19, 122, 114, 1, 145, 152, 26, 223 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 4,
                columns: new[] { "MdpHash", "MdpSalt" },
                values: new object[] { new byte[] { 216, 160, 220, 146, 131, 235, 137, 176, 108, 147, 52, 58, 233, 11, 26, 178, 59, 65, 22, 37, 19, 243, 63, 119, 33, 200, 44, 251, 1, 205, 51, 201, 76, 21, 54, 182, 253, 209, 248, 107, 49, 198, 149, 9, 229, 254, 61, 143, 177, 205, 223, 20, 27, 193, 0, 142, 221, 250, 196, 93, 98, 11, 169, 89 }, new byte[] { 119, 48, 19, 64, 180, 45, 171, 69, 54, 96, 113, 107, 129, 154, 195, 54, 234, 201, 199, 243, 174, 48, 81, 240, 116, 235, 200, 202, 69, 188, 162, 106, 110, 151, 205, 170, 152, 70, 99, 12, 127, 59, 24, 210, 195, 85, 120, 133, 14, 180, 2, 103, 153, 51, 85, 36, 93, 29, 33, 186, 153, 134, 137, 227, 106, 194, 146, 84, 145, 150, 174, 8, 126, 121, 163, 228, 226, 70, 75, 125, 45, 35, 119, 250, 66, 26, 108, 159, 148, 185, 85, 4, 165, 204, 62, 164, 241, 37, 171, 183, 207, 244, 197, 214, 88, 223, 49, 211, 149, 249, 253, 205, 49, 51, 1, 125, 99, 33, 145, 20, 19, 122, 114, 1, 145, 152, 26, 223 } });
        }
    }
}
